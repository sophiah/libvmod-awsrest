varnishtest "awsrest"
#
# varnishtest -Dregion=[Your Region] -Daccesskey=[Your Access Key] -Dsecretkey=[Your Secret Key] -Dbucket=[bucket] -Durl=[URL] r01.vtx
#
# token is very long.(over 256 byte)
# But vtc macro's buffer is 256 byte.
# Therefore, token was split.
#

varnish v1 -vcl+backend {
	import awsrest;
	import std;
	backend default {.host = "${bucket}.s3.amazonaws.com";}
	sub vcl_recv {
		set req.http.x-orgurl = req.url;
		set req.url           = "${url}?b&a";
		set req.url           = awsrest.formurl(std.querysort(req.url));
		set req.http.host     = "${bucket}.s3.amazonaws.com";
		
		if(req.http.x-orgurl == "/1"){
			awsrest.v4_generic(
				service           = "s3",
				region            = "${region}",
				access_key        = "${accesskey}",
				secret_key        = "${secretkey}",
				signed_headers    = "host;",
				canonical_headers = "host:" + req.http.host + awsrest.lf()
			);
		}
		return(pass);
	}
	sub vcl_backend_fetch{
		if(bereq.http.x-orgurl == "/2"){
			unset bereq.http.Authorization;
			awsrest.v4_generic(
				service           = "s3",
				region            = "${region}",
				access_key        = "${accesskey}",
				secret_key        = "${secretkey}",
				signed_headers    = "host;",
				canonical_headers = "host:" + bereq.http.host + awsrest.lf()
			);
		}
	}
} -start

client c1 {
	txreq -url "/1"
	rxresp
	expect resp.status        == "200"
	txreq -url "/2"
	rxresp
	expect resp.status        == "200"
}

client c1 -run
